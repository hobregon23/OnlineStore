@page "/checkout"
@inject NavigationManager navi
@inject ICartService cartService
@inject IAddressProvinceService provinceService


<!-- Checkout Section Begin -->
<section class="checkout spad" style="padding-top: 30px">
    <div class="container">
        <div class="checkout__form">
            <h4>Detalles del Pago</h4>
            <EditForm Model="@Cart" OnValidSubmit="@OnSubmit">
                <div class="row">
                    <div class="col-lg-7 col-md-6">
                        <div class="row">
                            <div class="col-lg-6">
                                <div class="checkout__input">
                                    <p>Nombre<span>*</span></p>
                                    <input type="text">
                                </div>
                            </div>
                            <div class="col-lg-6">
                                <div class="checkout__input">
                                    <p>Apellidos<span>*</span></p>
                                    <input type="text">
                                </div>
                            </div>
                        </div>
                        <div class="checkout__input">
                            <p>Provincia es un select<span>*</span></p>
                            <input type="text">
                        </div>
                        <div class="checkout__input">
                            <p>Dirección<span>*</span></p>
                            <input type="text" class="checkout__input__add">
                        </div>
                        <div class="checkout__input">
                            <p>Pueblo/Ciudad<span>*</span></p>
                            <input type="text">
                        </div>
                        <div class="checkout__input">
                            <p>Municipio<span>*</span></p>
                            <input type="text">
                        </div>
                        <div class="checkout__input">
                            <p>Código Postal<span>*</span></p>
                            <input type="text">
                        </div>
                        <div class="row">
                            <div class="col-lg-6">
                                <div class="checkout__input">
                                    <p>Teléfono<span>*</span></p>
                                    <input type="text">
                                </div>
                            </div>
                            <div class="col-lg-6">
                                <div class="checkout__input">
                                    <p>Correo<span>*</span></p>
                                    <input type="text">
                                </div>
                            </div>
                        </div>
                    </div>
                    <div class="col-lg-5 col-md-6">
                        <div class="checkout__order">
                            <h4>Tu orden</h4>
                            <div class="checkout__order__products">Productos <span>Total</span></div>
                            <ul>
                                @foreach (var item in Items)
                                {
                                    <li>@(GetProductNameShort(item.Product_name)) <span>$@(item.Price * item.Qty)</span></li>
                                }
                            </ul>
                            <div class="checkout__order__subtotal">Subtotal <span>$@SubTotal_amount</span></div>
                            <div class="checkout__order__shipping">Envío <span>$@Shipping_price</span></div>
                            <div class="checkout__order__total">Total <span>$@Total_amount</span></div>
                            <div class="checkout__input__checkbox">
                                <label for="shipping">
                                    Recoger en la Tienda
                                    <input type="checkbox" id="shipping" @onchange="eventArgs => { OnPickUpChange(eventArgs.Value); }">
                                    <span class="checkmark"></span>
                                </label>
                            </div>
                            <div class="checkout__input__checkbox">
                                <label for="inperson">
                                    Presencial
                                    <input type="checkbox" checked disabled id="inperson">
                                    <span class="checkmark"></span>
                                </label>
                            </div>
                            <p>
                                El pago se realizará de forma presencial, en efectivo o mediante transferencia bancaria
                                a la cuenta que aparece en la factura una vez haya examinado los productos recibidos.
                            </p>
                            <button type="submit" class="site-btn">CREAR ORDEN</button>
                        </div>
                    </div>
                </div>
            </EditForm>
        </div>
    </div>
</section>
<!-- Checkout Section End -->


@code{

    public List<CartItem> Items { get; set; } = new List<CartItem>();
    public Cart Cart { get; set; } = new Cart();
    public decimal SubTotal_amount { get; set; }
    public decimal Shipping_price { get; set; }
    public decimal Province_ship_price { get; set; }
    public decimal Total_amount { get; set; }
    public bool Need_shipping { get; set; } = true;

    protected override async Task OnInitializedAsync()
    {
        await LoadData();
    }

    private async Task LoadData()
    {
        Cart = await cartService.Get();
        if (Cart != null)
            Items = (await cartService.Get()).Items;
        SubTotal_amount = await cartService.GetTotalAmount();
        Province_ship_price = await provinceService.GetShipPrice("");
        Shipping_price = Province_ship_price;
        Total_amount = SubTotal_amount + Shipping_price;
    }

    private string GetProductNameShort(string name)
    {
        return name.Length > 30 ? name.Substring(0, 30) + "..." : name;
    }

    private void OnPickUpChange(object value)
    {
        if ((bool)value)
            Need_shipping = false;
        else
            Need_shipping = true;
        Shipping_price = Need_shipping ? Province_ship_price : 0;
        Total_amount = SubTotal_amount + Shipping_price;
    }

    private async Task OnSubmit()
    {

    }

}