@inject IJSRuntime JS
@inject IUserService userService
@inject IToastService toastService
@inject IAddressProvinceService provinceService


<div class="modal" tabindex="-1" role="dialog" id="taskModal">
    <div class="modal-dialog" style="max-width: 800px" role="document">
        <div class="modal-content">
            <div class="modal-header">
                <h5 class="modal-title">Agregar</h5>
                <button type="button" class="close" data-dismiss="modal" aria-label="Close">
                    <span aria-hidden="true">×</span>
                </button>
            </div>
            <div class="modal-body">
                <EditForm class="col-lg-10 col-md-10 mx-md-auto" Model="userInfo" OnValidSubmit="CreateUser">
                    <!-- Errors here -->
                    <DataAnnotationsValidator />
                    <!-- End Errors -->
                    <!-- Form Group -->
                    <div class="checkout__input">
                        <label>Rol<span>*</span></label>
                        <InputSelect Class="form-control" @bind-Value="@userRol">
                            <option value="Delivery">Repartidor</option>
                            <option value="User">Usuario</option>
                            <option value="Admin">Administrador</option>
                        </InputSelect>
                    </div>
                    <div class="row">
                        <div class="col-lg-6">
                            <div class="checkout__input">
                                <label>Usuario<span>*</span></label>
                                <InputText Class="form-control" @bind-Value="@userInfo.UserName" />
                                <ValidationMessage For="@(() => userInfo.UserName)" />
                            </div>
                        </div>
                        <div class="col-lg-6">
                            <div class="checkout__input">
                                <label>Correo<span>*</span></label>
                                <InputText Class="form-control" @bind-Value="@userInfo.Email" />
                                <ValidationMessage For="@(() => userInfo.Email)" />
                            </div>
                        </div>
                    </div>
                    <div class="row">
                        <div class="col-lg-6">
                            <div class="checkout__input">
                                <label>Nombre<span>*</span></label>
                                <InputText Class="form-control" @bind-Value="@userInfo.Name" />
                                <ValidationMessage For="@(() => userInfo.Name)" />
                            </div>
                        </div>
                        <div class="col-lg-6">
                            <div class="checkout__input">
                                <label>Apellidos<span>*</span></label>
                                <InputText Class="form-control" @bind-Value="@userInfo.LastName" />
                                <ValidationMessage For="@(() => userInfo.LastName)" />
                            </div>
                        </div>
                    </div>
                    <div class="row">
                        <div class="col-lg-6">
                            <div class="checkout__input">
                                <label>Contraseña<span>*</span></label>
                                <InputPassword Class="form-control" @bind-Value="@userInfo.Password" />
                                <ValidationMessage For="@(() => userInfo.Password)" />
                            </div>
                        </div>
                        <div class="col-lg-6">
                            <div class="checkout__input">
                                <label>Confirmar contraseña<span>*</span></label>
                                <InputPassword Class="form-control" @bind-Value="@userInfo.ConfirmPassword" />
                                <ValidationMessage For="@(() => userInfo.ConfirmPassword)" />
                            </div>
                        </div>
                    </div>
                    <div class="row">
                        <div class="col-lg-6">
                            <div class="checkout__input">
                                <label>Teléfono<span>*</span></label>
                                <InputText Class="form-control" @bind-Value="@userInfo.PhoneNumber" />
                                <ValidationMessage For="@(() => userInfo.PhoneNumber)" />
                            </div>
                        </div>
                        <div class="col-lg-6">
                            <div class="checkout__input">
                                <label>Dirección<span>*</span></label>
                                <InputText Class="form-control" @bind-Value="@userInfo.Address.Address_line" />
                                <ValidationMessage For="@(() => userInfo.Address.Address_line)" />
                            </div>
                        </div>
                    </div>
                    <div class="row">
                        <div class="col-lg-6">
                            <div class="checkout__input">
                                <label>Ciudad<span>*</span></label>
                                <InputText Class="form-control" @bind-Value="@userInfo.Address.City" />
                                <ValidationMessage For="@(() => userInfo.Address.City)" />
                            </div>
                        </div>
                        <div class="col-lg-6">
                            <div class="checkout__input">
                                <label>Municipio <span>*</span></label>
                                <InputText Class="form-control" @bind-Value="@userInfo.Address.State" />
                                <ValidationMessage For="@(() => userInfo.Address.State)" />
                            </div>
                        </div>
                    </div>
                    <div class="row">
                        <div class="col-lg-6">
                            <div class="checkout__input">
                                <label>Código Postal<span>*</span></label>
                                <InputText Class="form-control" @bind-Value="@userInfo.Address.Postal_code" />
                                <ValidationMessage For="@(() => userInfo.Address.Postal_code)" />
                            </div>
                        </div>
                        <div class="col-lg-6">
                            <div class="checkout__input">
                                <label>Provincia<span>*</span></label><br />
                                <select class="custom-select-primary" @onchange="OnProvinceChange" required>
                                    @foreach (var item in Provinces)
                                    {
                                        <option value="@item.Id">
                                            @item.Name
                                        </option>
                                    }
                                    <span class="arrow_carrot-down"></span>
                                </select>
                            </div>
                        </div>
                    </div>
                    <!-- Button -->
                    <hr />
                    <div class="row align-items-center mb-3 mt-3">
                        <div class="col-7 col-sm-6">
                            <button type="button" class="secondary-btn transition-3d-hover" data-dismiss="modal">Cancelar</button>
                            <button type="submit" class="primary-btn transition-3d-hover">Crear</button>
                        </div>
                    </div>
                    <!-- End Button -->
                </EditForm>
            </div>
        </div>
    </div>
</div>


@code {

    [Parameter]
    public UserDto userInfo { get; set; }
    [Parameter]
    public Action DataChanged { get; set; }

    private List<Address_Province> Provinces = new List<Address_Province>();
    private string userRol { get; set; } = "Delivery";

    protected override async Task OnInitializedAsync()
    {
        Provinces = await provinceService.GetAll();
        userInfo.Address.Province_id = 1;
    }

    private async Task CloseTaskModal()
    {
        await JS.InvokeAsync<object>("CloseModal", "taskModal");
    }

    private async Task CreateUser()
    {
        if (!AddressFullfill())
        {
            toastService.ShowWarning("Complete su dirección", "Advertencia");
            return;
        }
        var resp = await userService.AddAppUser(userInfo, userRol);
        if (resp)
        {
            await CloseTaskModal();
            DataChanged?.Invoke();
        }
    }

    private bool AddressFullfill()
    {
        if (string.IsNullOrWhiteSpace(userInfo.Address.Address_line) || string.IsNullOrEmpty(userInfo.Address.Address_line) ||
            string.IsNullOrWhiteSpace(userInfo.Address.City) || string.IsNullOrEmpty(userInfo.Address.City) ||
            string.IsNullOrWhiteSpace(userInfo.Address.State) || string.IsNullOrEmpty(userInfo.Address.State) ||
            string.IsNullOrWhiteSpace(userInfo.Address.Postal_code) || string.IsNullOrEmpty(userInfo.Address.Postal_code))
            return false;
        return true;
    }

    private void OnProvinceChange(ChangeEventArgs e)
    {
        userInfo.Address.Province_id = Convert.ToInt32(e.Value);
    }

}
